<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ReservationMapper">


	<!--카카오 페이 결제를 눌럿을 때 insert-->
	<insert id="reserveAdd" parameterType="ReservationDTO">
		insert into reservation
			values('RS'||reservation_seq.nextval, #{user_id}, #{leports_id}, #{rs_name}, #{rs_phone}, #{rs_persons} , #{rs_paymethod}
			, to_date(#{rs_date}, 'yy-mm-dd'), sysdate, #{rs_price}, #{rs_item_name}, null)
	</insert>

	<!--tid 추가-->
	<update id="reserveTidAdd" parameterType="hashmap">
		update reservation set tid = #{tid} where reservation_id = #{reservation_id}
	</update>

	<!-- 에약 번호 select-->
	<select id="reserveId" parameterType="hashmap" resultType="string">
		select reservation_id from reservation where user_id = #{user_id} and leports_id = #{leports_id}
	</select>

	<!--결제가 제대로 완료되지 않으면  delete 또는 결제 취소-->
	<delete id="deleteReserve" parameterType="hashmap">
		delete from reservation where reservation_id = #{reservation_id} and user_id = #{user_id}
	</delete>

	<!--예약 내역 리스트-->
	<select id="reserveList" parameterType="string" resultType="MyReserveDTO">
		select l.leports_id, l.leports_title, l.leports_main_img, p.c_phone, p.c_address, p.c_detail_address,
			r.reservation_id, r.rs_item_name, r.rs_persons, r.rs_date, r.rs_price
		from reservation r
		join leports l
		on r.leports_id = l.leports_id
		join partner p
		on l.partner_id = p.partner_id
		where r.user_id = #{user_id}
		order by r.reservation_id desc
	</select>

	<!--tid 찾기(예약 취소)-->
	<select id="tidSearch" parameterType="hashmap" resultType="string">
		select tid from reservation where reservation_id = #{reservation_id} and user_id = #{user_id}
	</select>

	<insert id="reviewWrite" parameterType="LeportsReviewDTO">
		insert into reservation_review values('RS_R'||rs_review_seq.nextval, #{leports_id}, #{reservation_id}, #{user_id}, #{review_comments}, sysdate)
	</insert>

	<select id="reviewList" parameterType="string" resultType="LeportsReviewDTO">
		select r.user_id, r.review_comments, r.review_regidate,
		       l.leports_id, l.leports_title, m.user_email
		from reservation_review r
		join leports l
		on r.leports_id = l.leports_id
		join member m
		on r.user_id = m.user_id
		where r.user_id = #{user_id}
		order by r.review_regidate desc
	</select>
</mapper>
